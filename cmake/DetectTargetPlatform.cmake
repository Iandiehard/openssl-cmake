function(detect_target_platform TARGET)
    set(${TARGET} "")

    if(WIN32)
        if(CMAKE_GENERATOR_PLATFORM STREQUAL "")
            set(CMAKE_GENERATOR_PLATFORM ${CMAKE_VS_PLATFORM_NAME_DEFAULT})
        endif()

        if(CMAKE_GENERATOR_PLATFORM STREQUAL "Win32")
            set(${TARGET} VC-WIN32)
        elseif(CMAKE_GENERATOR_PLATFORM STREQUAL "x64")
            set(${TARGET} VC-WIN64A)
        elseif(CMAKE_GENERATOR_PLATFORM STREQUAL "ARM")
            set(${TARGET} VC-WIN32-ARM)
        elseif(CMAKE_GENERATOR_PLATFORM STREQUAL "ARM64")
            set(${TARGET} VC-WIN64-ARM)
        endif()
    elseif(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
        if(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
            set(${TARGET} darwin64-x86_64-cc)
        elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "arm64")
            set(${TARGET} darwin64-arm64-cc)
        endif()
    elseif(LINUX)
        if(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
            set(${TARGET} linux-x86_64)
        elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "aarch64")
            set(${TARGET} linux-aarch64)
        endif()
    elseif(IOS)
        if(CMAKE_OSX_SYSROOT STREQUAL "iphoneos")
            set(${TARGET} ios64-xcrun)
        elseif(CMAKE_OSX_SYSROOT STREQUAL "iphonesimulator")
            set(${TARGET} iossimulator-xcrun)
        endif()
    elseif(ANDROID)
        if(CMAKE_ANDROID_ARCH_ABI STREQUAL "armeabi-v7a")
            set(${TARGET} android-arm)
        elseif(CMAKE_ANDROID_ARCH_ABI STREQUAL "arm64-v8a")
            set(${TARGET} android-arm64)
        elseif(CMAKE_ANDROID_ARCH_ABI STREQUAL "x86")
            set(${TARGET} android-x86)
        elseif(CMAKE_ANDROID_ARCH_ABI STREQUAL "x86_64")
            set(${TARGET} android-x86_64)
        endif()
    endif()

    if(${TARGET} STREQUAL "")
        message(FATAL_ERROR "Failed to detect OpenSSL target platform")
    endif()

    return(PROPAGATE ${TARGET})
endfunction()
